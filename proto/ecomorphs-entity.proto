syntax = "proto3";


import "github.com/infobloxopen/protoc-gen-gorm@v1.1.4/proto/options/gorm.proto";
import "github.com/infobloxopen/protoc-gen-gorm@v1.1.4/third_party/proto/atlas/resource/v1/resource.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/sergey23144V/BotanyBackend/servers/g-rpc/api";

import "elementary-type.proto";
import "ecomorphs.proto";

package botany;


// Определение сервиса EcoCRUDService
service EcomorphEntityService {

  // Создание новой сущности
  rpc InsertEcomorphEntity (InputEcomorphsEntity) returns (EcomorphsEntity);

  // Получение сущности по заголовку
  rpc GetEcomorphEntityByID (IdRequest) returns (EcomorphsEntity);

  // Обновление сущности по заголовку
  rpc UpdateEcomorphEntity (InputEcomorphsEntity) returns (EcomorphsEntity);

  // Удаление сущности по заголовку
  rpc DeleteEcomorphEntityByID  (IdRequest) returns (BoolResponse){
    option (gorm.method).object_type = "EcomorphsEntity";
  } ;

  // Получение списка всех сущностей
  rpc  GetAllEcomorphEntity (EcomorphsEntityListRequest) returns (EcomorphsEntityList);


}

message EcomorphsEntity {
  option (gorm.opts) = {
    ormable: true,
  };
  atlas.rpc.Identifier id = 1 [(gorm.field).tag = {type: "uuid" primary_key: true}];
  google.protobuf.Timestamp created_at = 2;
  google.protobuf.Timestamp updated_at = 3;
  google.protobuf.Timestamp deleted_at  = 8;
  string title = 4;
  string description = 5;
  string displayTable  = 6;
  int32 score  = 10;
  Ecomorph ecomorphs = 7 [(gorm.field).belongs_to = {disable_association_autocreate: false, disable_association_autoupdate: false, preload: true}];
  atlas.rpc.Identifier user_id = 9 [(gorm.field).tag = {type: "uuid" foreignkey:"auth.User"}];
}

message EcomorphsEntityList {
  PagesResponse page = 1;
  repeated EcomorphsEntity list = 2;
}


message InputFormEcomorphsEntity {
  string title = 1;
  string description = 2;
  string displayTable  = 6;
  int32 score  = 10;
  Ecomorph ecomorphs = 3;
}

message InputEcomorphsEntity{
  atlas.rpc.Identifier id = 1;
  InputFormEcomorphsEntity input = 2;
  bool publicly = 3;
}

message FilterEcomorphsEntity {
  repeated atlas.rpc.Identifier id = 1;
  optional string searchTitle = 2;
  optional  Direction title = 3;
  optional Direction score = 4;
  optional bool publicly = 5;
}

message EcomorphsEntityListRequest{
  PagesRequest page = 1;
  FilterEcomorphsEntity filter = 2;
}

