syntax = "proto3";



option go_package = "api/ecomorph/";


import "github.com/infobloxopen/protoc-gen-gorm@v1.1.2/proto/options/gorm.proto";
import "github.com/infobloxopen/protoc-gen-gorm@v1.1.2/third_party/proto/atlas/resource/v1/resource.proto";

import "google/protobuf/timestamp.proto";
import "elementary-type.proto";

package botany;

// Определение сервиса EcoCRUDService
service EcomorphService {
  // Создание новой сущности
  rpc InsertEcomorph (Ecomorph) returns (Ecomorph);

  // Получение сущности по заголовку
  rpc GetEcomorphById (IdRequest) returns (Ecomorph);

  // Обновление сущности по заголовку
  rpc UpEcomorphById(Ecomorph) returns (Ecomorph);

  // Удаление сущности по заголовку
  rpc DeleteEcomorphById (IdRequest) returns (BoolResponse){
    option (gorm.method).object_type = "Ecomorph";
  };

  // Получение списка всех типов
  rpc GetListEcomorphById (EmptyRequest) returns (EcomorphsList);
}

message Ecomorph {
  option (gorm.opts) = {
    ormable: true,
  };
  atlas.rpc.Identifier id = 1 [(gorm.field).tag = {type: "uuid" primary_key: true}];
  google.protobuf.Timestamp created_at = 2;
  google.protobuf.Timestamp updated_at = 3;

  string title = 4;
  string description = 5;
  atlas.rpc.Identifier user_id = 6 [(gorm.field).tag = {type: "uuid" foreignkey:"auth.User"}];
}

message EcomorphsList {
  repeated Ecomorph ecomorph = 1;
}

message InsertEcomorph {
  string title = 4;
  string description = 5;
  atlas.rpc.Identifier user_id = 6;
}


