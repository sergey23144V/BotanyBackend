syntax = "proto3";


option go_package = "github.com/sergey23144V/BotanyBackend/servers/g-rpc/api";

package botany;

import "img.proto";
import "github.com/infobloxopen/protoc-gen-gorm@v1.1.4/proto/options/gorm.proto";
import "github.com/infobloxopen/protoc-gen-gorm@v1.1.4/third_party/proto/atlas/resource/v1/resource.proto";
import "google/protobuf/timestamp.proto";
import "elementary-type.proto";
import "type-plant.proto";
import "trial-site.proto";


service TransectService {
  rpc CreateTransect(InputTransectRequest) returns (Transect);

  // Получение сущности по
  rpc GetTransect (IdRequest) returns (Transect);

  // Обновление сущности по id
  rpc UpTransect (InputTransectRequest) returns (Transect);

  // Обновление сущности по id
  rpc AddTrialSiteToTransect (InputTransectRequest) returns (Transect);

  // Удаление сущности по заголовку
  rpc DeleteTransect (IdRequest) returns (BoolResponse){
    option (gorm.method).object_type = "Transect";
  } ;

  // Получение списка всех сущностей
  rpc GetAllTransect (TransectListRequest) returns (TransectList);
}



message Transect {
  option (gorm.opts) = {
    ormable: true,
  };
  atlas.rpc.Identifier id = 1 [(gorm.field).tag = {type: "uuid" primary_key: true}];
  string title = 2;
  int32 covered = 3;
  int32 rating = 4;
  int32 square = 5;
  int32 squareTrialSite = 6;
  int32 count_types = 7;
  repeated TrialSite trialSite = 8 [(gorm.field).has_many = { association_save_reference:true, disable_association_autocreate: true, disable_association_autoupdate: true, preload: true}];
  TypePlant  dominant = 9 [(gorm.field).belongs_to = {disable_association_autocreate: true, disable_association_autoupdate: true, preload: true}];
  TypePlant  subDominant = 10 [(gorm.field).belongs_to = {disable_association_autocreate: true, disable_association_autoupdate: true, preload: true}];
  google.protobuf.Timestamp created_at = 11;
  google.protobuf.Timestamp updated_at = 12;
  google.protobuf.Timestamp deleted_at  = 13;
  Img img = 14 [(gorm.field).belongs_to = {preload: true, disable_association_autoupdate: false, disable_association_autocreate: false}];
  atlas.rpc.Identifier user_id = 15 [(gorm.field).tag = {type: "uuid" foreignkey:"auth.User"}];
}

message TransectList {
  PagesResponse page = 1;
  repeated Transect list = 2;
}


message InputFormTransectRequest {
  string title = 2;
  int32 covered = 3;
  int32 rating = 10;
  int32 square = 11;
  int32 squareTrialSite = 12;
  int32 count_types = 4;
  repeated TrialSite trialSite = 1;
  Img img = 14;
  TypePlant dominant = 7;
  TypePlant subDominant = 8;

}

message InputTransectRequest{
  atlas.rpc.Identifier id = 1;
  InputFormTransectRequest input = 2;
}

message FilterTransect {
  repeated atlas.rpc.Identifier id = 1;
  string searchTitle = 2;
  optional Direction title = 3;
  optional Direction covered = 4;
  optional Direction rating = 5;
  optional Direction count_types = 6;
  TypePlant dominant = 7;
  TypePlant subDominant = 8;
}

message TransectListRequest{
  PagesRequest page = 1;
  FilterTransect filter = 2;
}