syntax = "proto3";


option go_package = "api/transect";

package botany;


import "github.com/infobloxopen/protoc-gen-gorm@v1.1.2/proto/options/gorm.proto";
import "github.com/infobloxopen/protoc-gen-gorm@v1.1.2/third_party/proto/atlas/resource/v1/resource.proto";
import "google/protobuf/timestamp.proto";
import "elementary-type.proto";
import "type-plant.proto";
import "trial-site.proto";


service TransectService {
  rpc CreateTransect(InputTransectRequest) returns (Transect);

  // Получение сущности по
  rpc GetTransect (IdRequest) returns (Transect);

  // Обновление сущности по id
  rpc UpdateTransect (InputTransectRequest) returns (Transect);

  // Удаление сущности по заголовку
  rpc DeleteTransect (IdRequest) returns (BoolResponse){
    option (gorm.method).object_type = "Transect";
  } ;

  // Получение списка всех сущностей
  rpc GetAllTransect (EmptyRequest) returns (TransectList);
}



message Transect {
  option (gorm.opts) = {
    ormable: true,
  };
  atlas.rpc.Identifier id = 1 [(gorm.field).tag = {type: "uuid" primary_key: true}];
  string title = 2;
  int32 covered = 3;
  int32 rating = 10;
  int32 square = 11;
  int32 squareTrialSite = 12;
  int32 count_types = 4;
  atlas.rpc.Identifier  dominant = 7 [(gorm.field).has_many = {preload: true}];
  atlas.rpc.Identifier  subDominant = 8 [(gorm.field).has_many = {preload: true}];
  repeated TrialSite trialSite = 9 [(gorm.field).many_to_many = {}];
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
}

message TransectList {
  repeated Transect transect = 1;
}


message InputFormTransectRequest {
  string title = 2;
  string subtitle = 3;
  repeated TrialSite trialSite = 4;
  optional TypePlant dominant = 7;
  optional TypePlant subDominant = 8;
}

message InputTransectRequest{
  atlas.rpc.Identifier id = 1;
  InputFormTransectRequest input = 2;
}