syntax = "proto3";




option go_package = "github.com/sergey23144V/BotanyBackend/servers/g-rpc/api";
import "github.com/infobloxopen/protoc-gen-gorm@v1.1.4/proto/options/gorm.proto";
import "github.com/infobloxopen/protoc-gen-gorm@v1.1.4/third_party/proto/atlas/resource/v1/resource.proto";
import "google/protobuf/timestamp.proto";
import "elementary-type.proto";
import "ecomorphs-entity.proto";

package botany;

service TypePlantService {
  rpc CreateTypePlant(InputTypePlantRequest) returns (TypePlant);

  // Получение сущности по
  rpc GetTypePlant (IdRequest) returns (TypePlant);

  // Обновление сущности по id
  rpc UpdateTypePlant (InputTypePlantRequest) returns (TypePlant);

  // Удаление сущности по заголовку
  rpc DeleteTypePlant (IdRequest) returns (BoolResponse){
    option (gorm.method).object_type = "TypePlant";
  } ;

  // Получение списка всех сущностей
  rpc GetAllTypePlant (PagesRequest) returns (TypePlantList);
}



message TypePlant {
  option (gorm.opts) = {
    ormable: true,
  };
  atlas.rpc.Identifier id = 1 [(gorm.field).tag = {type: "uuid" primary_key: true}];
  string title = 2;
  string subtitle = 3 ;
  repeated EcomorphsEntity ecomorphsEntity = 4 [(gorm.field).many_to_many = {disable_association_autocreate: false, disable_association_autoupdate: false, preload: true}];
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
  google.protobuf.Timestamp deleted_at  = 8;
  atlas.rpc.Identifier user_id = 7 [(gorm.field).tag = {type: "uuid" foreignkey:"auth.User"}];
}

message TypePlantList {
  PagesResponse page = 2;
  repeated TypePlant list = 1;
}


message InputFormTypePlantRequest {
  string title = 2;
  string subtitle = 3;
  repeated EcomorphsEntity ecomorphsEntity = 4;
}

message InputTypePlantRequest{
  atlas.rpc.Identifier id = 1;
  InputFormTypePlantRequest input = 2;
}


