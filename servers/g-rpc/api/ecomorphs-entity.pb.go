// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v4.24.3
// source: ecomorphs-entity.proto

package api

import (
	resource "github.com/infobloxopen/atlas-app-toolkit/v2/rpc/resource"
	_ "github.com/infobloxopen/protoc-gen-gorm/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EcomorphsEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           *resource.Identifier   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt    *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt    *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	Title        string                 `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Description  string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	DisplayTable string                 `protobuf:"bytes,6,opt,name=displayTable,proto3" json:"displayTable,omitempty"`
	Score        int32                  `protobuf:"varint,10,opt,name=score,proto3" json:"score,omitempty"`
	Ecomorphs    *Ecomorph              `protobuf:"bytes,7,opt,name=ecomorphs,proto3" json:"ecomorphs,omitempty"`
	UserId       *resource.Identifier   `protobuf:"bytes,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *EcomorphsEntity) Reset() {
	*x = EcomorphsEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecomorphs_entity_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EcomorphsEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EcomorphsEntity) ProtoMessage() {}

func (x *EcomorphsEntity) ProtoReflect() protoreflect.Message {
	mi := &file_ecomorphs_entity_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EcomorphsEntity.ProtoReflect.Descriptor instead.
func (*EcomorphsEntity) Descriptor() ([]byte, []int) {
	return file_ecomorphs_entity_proto_rawDescGZIP(), []int{0}
}

func (x *EcomorphsEntity) GetId() *resource.Identifier {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *EcomorphsEntity) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *EcomorphsEntity) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *EcomorphsEntity) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *EcomorphsEntity) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *EcomorphsEntity) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *EcomorphsEntity) GetDisplayTable() string {
	if x != nil {
		return x.DisplayTable
	}
	return ""
}

func (x *EcomorphsEntity) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *EcomorphsEntity) GetEcomorphs() *Ecomorph {
	if x != nil {
		return x.Ecomorphs
	}
	return nil
}

func (x *EcomorphsEntity) GetUserId() *resource.Identifier {
	if x != nil {
		return x.UserId
	}
	return nil
}

type EcomorphsEntityList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page *PagesResponse     `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	List []*EcomorphsEntity `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *EcomorphsEntityList) Reset() {
	*x = EcomorphsEntityList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecomorphs_entity_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EcomorphsEntityList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EcomorphsEntityList) ProtoMessage() {}

func (x *EcomorphsEntityList) ProtoReflect() protoreflect.Message {
	mi := &file_ecomorphs_entity_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EcomorphsEntityList.ProtoReflect.Descriptor instead.
func (*EcomorphsEntityList) Descriptor() ([]byte, []int) {
	return file_ecomorphs_entity_proto_rawDescGZIP(), []int{1}
}

func (x *EcomorphsEntityList) GetPage() *PagesResponse {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *EcomorphsEntityList) GetList() []*EcomorphsEntity {
	if x != nil {
		return x.List
	}
	return nil
}

type InputFormEcomorphsEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title        string    `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description  string    `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	DisplayTable string    `protobuf:"bytes,6,opt,name=displayTable,proto3" json:"displayTable,omitempty"`
	Score        int32     `protobuf:"varint,10,opt,name=score,proto3" json:"score,omitempty"`
	Ecomorphs    *Ecomorph `protobuf:"bytes,3,opt,name=ecomorphs,proto3" json:"ecomorphs,omitempty"`
}

func (x *InputFormEcomorphsEntity) Reset() {
	*x = InputFormEcomorphsEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecomorphs_entity_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputFormEcomorphsEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputFormEcomorphsEntity) ProtoMessage() {}

func (x *InputFormEcomorphsEntity) ProtoReflect() protoreflect.Message {
	mi := &file_ecomorphs_entity_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputFormEcomorphsEntity.ProtoReflect.Descriptor instead.
func (*InputFormEcomorphsEntity) Descriptor() ([]byte, []int) {
	return file_ecomorphs_entity_proto_rawDescGZIP(), []int{2}
}

func (x *InputFormEcomorphsEntity) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *InputFormEcomorphsEntity) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *InputFormEcomorphsEntity) GetDisplayTable() string {
	if x != nil {
		return x.DisplayTable
	}
	return ""
}

func (x *InputFormEcomorphsEntity) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *InputFormEcomorphsEntity) GetEcomorphs() *Ecomorph {
	if x != nil {
		return x.Ecomorphs
	}
	return nil
}

type InputEcomorphsEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    *resource.Identifier      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Input *InputFormEcomorphsEntity `protobuf:"bytes,2,opt,name=input,proto3" json:"input,omitempty"`
}

func (x *InputEcomorphsEntity) Reset() {
	*x = InputEcomorphsEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ecomorphs_entity_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputEcomorphsEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputEcomorphsEntity) ProtoMessage() {}

func (x *InputEcomorphsEntity) ProtoReflect() protoreflect.Message {
	mi := &file_ecomorphs_entity_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputEcomorphsEntity.ProtoReflect.Descriptor instead.
func (*InputEcomorphsEntity) Descriptor() ([]byte, []int) {
	return file_ecomorphs_entity_proto_rawDescGZIP(), []int{3}
}

func (x *InputEcomorphsEntity) GetId() *resource.Identifier {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *InputEcomorphsEntity) GetInput() *InputFormEcomorphsEntity {
	if x != nil {
		return x.Input
	}
	return nil
}

var File_ecomorphs_entity_proto protoreflect.FileDescriptor

var file_ecomorphs_entity_proto_rawDesc = []byte{
	0x0a, 0x16, 0x65, 0x63, 0x6f, 0x6d, 0x6f, 0x72, 0x70, 0x68, 0x73, 0x2d, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x62, 0x6f, 0x74, 0x61, 0x6e, 0x79,
	0x1a, 0x47, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x66,
	0x6f, 0x62, 0x6c, 0x6f, 0x78, 0x6f, 0x70, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x67, 0x6f, 0x72, 0x6d, 0x40, 0x76, 0x31, 0x2e, 0x31, 0x2e, 0x34,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x67,
	0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x61, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x62, 0x6c, 0x6f, 0x78, 0x6f, 0x70,
	0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x67, 0x6f,
	0x72, 0x6d, 0x40, 0x76, 0x31, 0x2e, 0x31, 0x2e, 0x34, 0x2f, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x74, 0x6c, 0x61,
	0x73, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x72, 0x79, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x65, 0x63, 0x6f, 0x6d, 0x6f, 0x72, 0x70, 0x68, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf6, 0x03, 0x0a, 0x0f, 0x45, 0x63, 0x6f, 0x6d, 0x6f, 0x72,
	0x70, 0x68, 0x73, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x35, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x42, 0x0e, 0xba, 0xb9,
	0x19, 0x0a, 0x0a, 0x08, 0x12, 0x04, 0x75, 0x75, 0x69, 0x64, 0x28, 0x01, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x65, 0x63, 0x6f, 0x6d, 0x6f, 0x72, 0x70, 0x68, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x6f, 0x74, 0x61, 0x6e, 0x79, 0x2e,
	0x45, 0x63, 0x6f, 0x6d, 0x6f, 0x72, 0x70, 0x68, 0x42, 0x08, 0xba, 0xb9, 0x19, 0x04, 0x22, 0x02,
	0x38, 0x01, 0x52, 0x09, 0x65, 0x63, 0x6f, 0x6d, 0x6f, 0x72, 0x70, 0x68, 0x73, 0x12, 0x47, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x42, 0x17, 0xba, 0xb9, 0x19, 0x13, 0x0a, 0x11, 0x12, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x7a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x3a, 0x06, 0xba, 0xb9, 0x19, 0x02, 0x08, 0x01, 0x22, 0x6d,
	0x0a, 0x13, 0x45, 0x63, 0x6f, 0x6d, 0x6f, 0x72, 0x70, 0x68, 0x73, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x6f, 0x74, 0x61, 0x6e, 0x79, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x2b, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x62, 0x6f, 0x74, 0x61, 0x6e, 0x79, 0x2e, 0x45, 0x63, 0x6f, 0x6d, 0x6f, 0x72, 0x70, 0x68,
	0x73, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xbc, 0x01,
	0x0a, 0x18, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x45, 0x63, 0x6f, 0x6d, 0x6f,
	0x72, 0x70, 0x68, 0x73, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x2e, 0x0a, 0x09,
	0x65, 0x63, 0x6f, 0x6d, 0x6f, 0x72, 0x70, 0x68, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x62, 0x6f, 0x74, 0x61, 0x6e, 0x79, 0x2e, 0x45, 0x63, 0x6f, 0x6d, 0x6f, 0x72, 0x70,
	0x68, 0x52, 0x09, 0x65, 0x63, 0x6f, 0x6d, 0x6f, 0x72, 0x70, 0x68, 0x73, 0x22, 0x75, 0x0a, 0x14,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x45, 0x63, 0x6f, 0x6d, 0x6f, 0x72, 0x70, 0x68, 0x73, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x25, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x61, 0x74, 0x6c, 0x61, 0x73, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x02, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x05, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x6f, 0x74,
	0x61, 0x6e, 0x79, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x45, 0x63, 0x6f,
	0x6d, 0x6f, 0x72, 0x70, 0x68, 0x73, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x05, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x32, 0xa1, 0x03, 0x0a, 0x15, 0x45, 0x63, 0x6f, 0x6d, 0x6f, 0x72, 0x70, 0x68,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4d, 0x0a,
	0x14, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x45, 0x63, 0x6f, 0x6d, 0x6f, 0x72, 0x70, 0x68, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x2e, 0x62, 0x6f, 0x74, 0x61, 0x6e, 0x79, 0x2e, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x45, 0x63, 0x6f, 0x6d, 0x6f, 0x72, 0x70, 0x68, 0x73, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x1a, 0x17, 0x2e, 0x62, 0x6f, 0x74, 0x61, 0x6e, 0x79, 0x2e, 0x45, 0x63, 0x6f,
	0x6d, 0x6f, 0x72, 0x70, 0x68, 0x73, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x43, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x45, 0x63, 0x6f, 0x6d, 0x6f, 0x72, 0x70, 0x68, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x42, 0x79, 0x49, 0x44, 0x12, 0x11, 0x2e, 0x62, 0x6f, 0x74, 0x61, 0x6e, 0x79, 0x2e, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x62, 0x6f, 0x74, 0x61, 0x6e,
	0x79, 0x2e, 0x45, 0x63, 0x6f, 0x6d, 0x6f, 0x72, 0x70, 0x68, 0x73, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x12, 0x4d, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x63, 0x6f, 0x6d, 0x6f,
	0x72, 0x70, 0x68, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x2e, 0x62, 0x6f, 0x74, 0x61,
	0x6e, 0x79, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x45, 0x63, 0x6f, 0x6d, 0x6f, 0x72, 0x70, 0x68,
	0x73, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x1a, 0x17, 0x2e, 0x62, 0x6f, 0x74, 0x61, 0x6e, 0x79,
	0x2e, 0x45, 0x63, 0x6f, 0x6d, 0x6f, 0x72, 0x70, 0x68, 0x73, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x5a, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x63, 0x6f, 0x6d, 0x6f, 0x72,
	0x70, 0x68, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x79, 0x49, 0x44, 0x12, 0x11, 0x2e, 0x62,
	0x6f, 0x74, 0x61, 0x6e, 0x79, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x14, 0x2e, 0x62, 0x6f, 0x74, 0x61, 0x6e, 0x79, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0xba, 0xb9, 0x19, 0x11, 0x0a, 0x0f, 0x45, 0x63, 0x6f,
	0x6d, 0x6f, 0x72, 0x70, 0x68, 0x73, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x49, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x45, 0x63, 0x6f, 0x6d, 0x6f, 0x72, 0x70, 0x68, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x2e, 0x62, 0x6f, 0x74, 0x61, 0x6e, 0x79, 0x2e, 0x50, 0x61,
	0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x62, 0x6f, 0x74,
	0x61, 0x6e, 0x79, 0x2e, 0x45, 0x63, 0x6f, 0x6d, 0x6f, 0x72, 0x70, 0x68, 0x73, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x39, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x65, 0x72, 0x67, 0x65, 0x79, 0x32, 0x33, 0x31, 0x34,
	0x34, 0x56, 0x2f, 0x42, 0x6f, 0x74, 0x61, 0x6e, 0x79, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64,
	0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x2f, 0x67, 0x2d, 0x72, 0x70, 0x63, 0x2f, 0x61,
	0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ecomorphs_entity_proto_rawDescOnce sync.Once
	file_ecomorphs_entity_proto_rawDescData = file_ecomorphs_entity_proto_rawDesc
)

func file_ecomorphs_entity_proto_rawDescGZIP() []byte {
	file_ecomorphs_entity_proto_rawDescOnce.Do(func() {
		file_ecomorphs_entity_proto_rawDescData = protoimpl.X.CompressGZIP(file_ecomorphs_entity_proto_rawDescData)
	})
	return file_ecomorphs_entity_proto_rawDescData
}

var file_ecomorphs_entity_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_ecomorphs_entity_proto_goTypes = []interface{}{
	(*EcomorphsEntity)(nil),          // 0: botany.EcomorphsEntity
	(*EcomorphsEntityList)(nil),      // 1: botany.EcomorphsEntityList
	(*InputFormEcomorphsEntity)(nil), // 2: botany.InputFormEcomorphsEntity
	(*InputEcomorphsEntity)(nil),     // 3: botany.InputEcomorphsEntity
	(*resource.Identifier)(nil),      // 4: atlas.rpc.Identifier
	(*timestamppb.Timestamp)(nil),    // 5: google.protobuf.Timestamp
	(*Ecomorph)(nil),                 // 6: botany.Ecomorph
	(*PagesResponse)(nil),            // 7: botany.PagesResponse
	(*IdRequest)(nil),                // 8: botany.IdRequest
	(*PagesRequest)(nil),             // 9: botany.PagesRequest
	(*BoolResponse)(nil),             // 10: botany.BoolResponse
}
var file_ecomorphs_entity_proto_depIdxs = []int32{
	4,  // 0: botany.EcomorphsEntity.id:type_name -> atlas.rpc.Identifier
	5,  // 1: botany.EcomorphsEntity.created_at:type_name -> google.protobuf.Timestamp
	5,  // 2: botany.EcomorphsEntity.updated_at:type_name -> google.protobuf.Timestamp
	5,  // 3: botany.EcomorphsEntity.deleted_at:type_name -> google.protobuf.Timestamp
	6,  // 4: botany.EcomorphsEntity.ecomorphs:type_name -> botany.Ecomorph
	4,  // 5: botany.EcomorphsEntity.user_id:type_name -> atlas.rpc.Identifier
	7,  // 6: botany.EcomorphsEntityList.page:type_name -> botany.PagesResponse
	0,  // 7: botany.EcomorphsEntityList.list:type_name -> botany.EcomorphsEntity
	6,  // 8: botany.InputFormEcomorphsEntity.ecomorphs:type_name -> botany.Ecomorph
	4,  // 9: botany.InputEcomorphsEntity.id:type_name -> atlas.rpc.Identifier
	2,  // 10: botany.InputEcomorphsEntity.input:type_name -> botany.InputFormEcomorphsEntity
	3,  // 11: botany.EcomorphEntityService.InsertEcomorphEntity:input_type -> botany.InputEcomorphsEntity
	8,  // 12: botany.EcomorphEntityService.GetEcomorphEntityByID:input_type -> botany.IdRequest
	3,  // 13: botany.EcomorphEntityService.UpdateEcomorphEntity:input_type -> botany.InputEcomorphsEntity
	8,  // 14: botany.EcomorphEntityService.DeleteEcomorphEntityByID:input_type -> botany.IdRequest
	9,  // 15: botany.EcomorphEntityService.GetAllEcomorphEntity:input_type -> botany.PagesRequest
	0,  // 16: botany.EcomorphEntityService.InsertEcomorphEntity:output_type -> botany.EcomorphsEntity
	0,  // 17: botany.EcomorphEntityService.GetEcomorphEntityByID:output_type -> botany.EcomorphsEntity
	0,  // 18: botany.EcomorphEntityService.UpdateEcomorphEntity:output_type -> botany.EcomorphsEntity
	10, // 19: botany.EcomorphEntityService.DeleteEcomorphEntityByID:output_type -> botany.BoolResponse
	1,  // 20: botany.EcomorphEntityService.GetAllEcomorphEntity:output_type -> botany.EcomorphsEntityList
	16, // [16:21] is the sub-list for method output_type
	11, // [11:16] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_ecomorphs_entity_proto_init() }
func file_ecomorphs_entity_proto_init() {
	if File_ecomorphs_entity_proto != nil {
		return
	}
	file_elementary_type_proto_init()
	file_ecomorphs_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ecomorphs_entity_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EcomorphsEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecomorphs_entity_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EcomorphsEntityList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecomorphs_entity_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputFormEcomorphsEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ecomorphs_entity_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputEcomorphsEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ecomorphs_entity_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ecomorphs_entity_proto_goTypes,
		DependencyIndexes: file_ecomorphs_entity_proto_depIdxs,
		MessageInfos:      file_ecomorphs_entity_proto_msgTypes,
	}.Build()
	File_ecomorphs_entity_proto = out.File
	file_ecomorphs_entity_proto_rawDesc = nil
	file_ecomorphs_entity_proto_goTypes = nil
	file_ecomorphs_entity_proto_depIdxs = nil
}
