package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.43

import (
	"context"
	"fmt"

	"github.com/sergey23144V/BotanyBackend/servers/g-rpc/api/auth"
	"github.com/sergey23144V/BotanyBackend/servers/grapgql/graph/model"
)

// SignUpUser is the resolver for the signUpUser field.
func (r *authMutationResolver) SignUpUser(ctx context.Context, obj *model.AuthMutation, data *auth.SignUpUserInput) (*auth.SignInUserResponse, error) {
	panic(fmt.Errorf("not implemented: SignUpUser - signUpUser"))
}

// SignInUser is the resolver for the signInUser field.
func (r *authMutationResolver) SignInUser(ctx context.Context, obj *model.AuthMutation, data *auth.SignInUserInput) (*auth.SignInUserResponse, error) {
	panic(fmt.Errorf("not implemented: SignInUser - signInUser"))
}

// AuthMutation returns AuthMutationResolver implementation.
func (r *Resolver) AuthMutation() AuthMutationResolver { return &authMutationResolver{r} }

type authMutationResolver struct{ *Resolver }
