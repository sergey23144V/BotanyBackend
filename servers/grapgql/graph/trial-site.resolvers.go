package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.43

import (
	"context"
	"fmt"

	"github.com/sergey23144V/BotanyBackend/servers/g-rpc/api"
	trial_site "github.com/sergey23144V/BotanyBackend/servers/g-rpc/api/trial-site"
	"github.com/sergey23144V/BotanyBackend/servers/grapgql/graph/model"
)

// CreateTrialSite is the resolver for the createTrialSite field.
func (r *trialSiteMutationResolver) CreateTrialSite(ctx context.Context, obj *model.TrialSiteMutation, input *trial_site.InputFormTrialSiteRequest) (*trial_site.TrialSite, error) {
	panic(fmt.Errorf("not implemented: CreateTrialSite - createTrialSite"))
}

// UpTrialSite is the resolver for the upTrialSite field.
func (r *trialSiteMutationResolver) UpTrialSite(ctx context.Context, obj *model.TrialSiteMutation, input *trial_site.InputTrialSiteRequest) (*trial_site.TrialSite, error) {
	panic(fmt.Errorf("not implemented: UpTrialSite - upTrialSite"))
}

// DeleteTrialSite is the resolver for the deleteTrialSite field.
func (r *trialSiteMutationResolver) DeleteTrialSite(ctx context.Context, obj *model.TrialSiteMutation, id string) (*api.BoolResponse, error) {
	panic(fmt.Errorf("not implemented: DeleteTrialSite - deleteTrialSite"))
}

// GetTrialSite is the resolver for the getTrialSite field.
func (r *trialSiteQueryResolver) GetTrialSite(ctx context.Context, obj *model.TrialSiteQuery, id string) (*trial_site.TrialSite, error) {
	panic(fmt.Errorf("not implemented: GetTrialSite - getTrialSite"))
}

// GetAllTrialSite is the resolver for the getAllTrialSite field.
func (r *trialSiteQueryResolver) GetAllTrialSite(ctx context.Context, obj *model.TrialSiteQuery) (*trial_site.TrialSiteList, error) {
	list, err := trial_site.DefaultListTrialSite(ctx, r.Db)
	if err != nil {
		return nil, err
	}
	return &trial_site.TrialSiteList{TrialSite: list}, nil
}

// TrialSiteMutation returns TrialSiteMutationResolver implementation.
func (r *Resolver) TrialSiteMutation() TrialSiteMutationResolver {
	return &trialSiteMutationResolver{r}
}

// TrialSiteQuery returns TrialSiteQueryResolver implementation.
func (r *Resolver) TrialSiteQuery() TrialSiteQueryResolver { return &trialSiteQueryResolver{r} }

type trialSiteMutationResolver struct{ *Resolver }
type trialSiteQueryResolver struct{ *Resolver }
