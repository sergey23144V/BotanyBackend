type TrialSiteQuery {
    getTrialSite(id: ID!): TrialSite @goField(forceResolver: true)
    getAllTrialSite: TrialSiteList @goField(forceResolver: true)
}

type TrialSiteMutation {
    createTrialSite(input: InputFormTrialSiteRequest): TrialSite @goField(forceResolver: true)
    upTrialSite(input: InputTrialSiteRequest): TrialSite @goField(forceResolver: true)
    deleteTrialSite(id: ID!): BoolResponse @goField(forceResolver: true)
}

type TrialSite {
    id: IdentifierType!
    title: String
    covered: Int
    rating: Int
    countTypes: Int
    dominant: TypePlant
    subDominant: TypePlant
    typePlant: [TypePlant]
    createdAt: Timestamp
    updatedAt: Timestamp
    userId: IdentifierType
}

input TrialSiteInput {
    id: IdentifierInput!
    title: String
    covered: Int
    rating: Int
    countTypes: Int
    dominant: TypePlantInput
    subDominant: TypePlantInput
    typePlant: [TypePlantInput]
    userId: IdentifierInput
}

type TrialSiteList {
    trialSite: [TrialSite]
}

input InputFormTrialSiteRequest {
    title: String
    covered: Int
    rating: Int
    countTypes: Int
    typePlant: [TypePlantInput]
    dominant: TypePlantInput
    subDominant: TypePlantInput
}

input InputTrialSiteRequest {
    id: IdentifierInput!
    input: InputFormTrialSiteRequest
}