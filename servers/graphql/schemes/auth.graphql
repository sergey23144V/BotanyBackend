enum RoleType{
    SuperUser
    NormalUser
}

type User{
    id: IdentifierType!
    name: String!
    email: String!
    password: String!
    role: RoleType
}

type SignInUserResponse{
    status: String!
    access_token: String!
    refresh_token: String!
}

input SignInUserInput{
    email: String!
    password: String!
}

input SignUpUserInput{
    email: String!
    password: String!
    name:String!
}
input RefreshTokenRequest{
    refresh_token: String!
}


type AuthMutation{
    signUpUser(data : SignUpUserInput): SignInUserResponse @goField(forceResolver: true)
    SignUpSuperUser(data : SignUpUserInput): SignInUserResponse @goField(forceResolver: true)
    signInUser(data : SignInUserInput): SignInUserResponse @goField(forceResolver: true)
    RefreshToken(data : RefreshTokenRequest): SignInUserResponse @goField(forceResolver: true)
}

type UserQuery {
    getMe: User @goField(forceResolver: true)
}

